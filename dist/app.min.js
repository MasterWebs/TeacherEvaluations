angular.module("EvalApp",["ngRoute"]).config(["$routeProvider",function(a){a.when("/login",{templateUrl:"views/login.html",controller:"LoginController"}).when("/student",{templateUrl:"views/studentFrontpage.html",controller:"StudentController"}).when("/admin",{templateUrl:"views/adminFrontpage.html",controller:"AdminController"}).when("/create-template",{templateUrl:"views/createTemplate.html",controller:"CreateTemplateController"}).otherwise({redirectTo:"/login"})}]),angular.module("EvalApp").constant("SERVER_URL","http://dispatch.ru.is/h22/api/v1/"),angular.module("EvalApp").controller("AdminController",["$scope","$location","LoginResource","EvaluationTemplateResource",function(a,b,c,d){a.token=c.getToken(),a.evaluationTemplates=[],d.init(a.token),d.getTemplates().success(function(b){toastr.success("Fetched all templates"),a.evaluationTemplates=b}).error(function(){toastr.error("Could not fetch all evaluation templates")}),a.redirect=function(a){"create"===a&&b.path("/create-template")}}]),angular.module("EvalApp").controller("CreateTemplateController",["$scope","$location","LoginResource","EvaluationTemplateResource",function(a,b,c,d){a.token=c.getToken(),a.title="",a.titleEN="",a.intro="",a.introEN="",a.courseQuestions=[],a.teacherQuestions=[],a.qText="",a.qTextEN="",a.qImageURL="",a.qType="Single",a.qTeacher=!1,a.tID=0,a.qID=0,void 0===a.token&&toastr.error("YOU SHALL NOT PASS"),a.createTemplate=function(){if(""===a.title)toastr.error("Title cannot be empty");else if(""===a.titleEN)toastr.error("Title in english cannot be empty");else if(""===a.intro)toastr.error("Intro cannot be empty");else if(""===a.introEN)toastr.error("Intro in english cannot be empty");else if(0===a.teacherQuestions.length)toastr.error("Teacher questions are empty");else{d.init(a.token);var b={ID:a.tID,Title:a.title,TitleEN:a.titleEN,IntroText:a.intro,IntroTextEN:a.introEN,CourseQuestions:a.courseQuestions,TeacherQuestions:a.teacherQuestions};d.create(b).success(function(){a.tID++,toastr.success("Created evaluation template")}).error(function(){toastr.error("Could not create template")})}},a.createQuestion=function(){if(""===a.qText)toastr.error("Question text cannot be empty");else if(""===a.qTextEN)toastr.error("Questin text in english cannot be empty");else{var b={ID:a.qID,Text:a.qText,TextEN:a.qTextEN,ImageURL:a.qImageURL,Type:a.qType,Answers:{ID:0,Text:"",TextEN:"",ImageURL:"",Weight:0}};console.log("type: "+b.Type),a.qID++,a.qTeacher===!1?(a.courseQuestions.push(b),a.teacherQuestions.push(b)):a.teacherQuestions.push(b)}}}]),angular.module("EvalApp").directive("evaluationQuestion",function(){return{restrict:"E",scope:{question:"ngModel"},templateUrl:"views/evaluationQuestion.tpl.html",link:function(){}}}),angular.module("EvalApp").factory("EvaluationTemplateResource",["$http","SERVER_URL",function(a,b){var c="";return{init:function(a){var b="Basic "+a;c={headers:{Authorization:b}}},getTemplates:function(){return a.get(b+"evaluationtemplates",c)},getTemplate:function(){},create:function(d){return a.post(b+"evaluationtemplates",d,c)}}}]),angular.module("EvalApp").controller("LoginController",["$scope","LoginResource","$location",function(a,b,c){a.user="",a.pass="",a.login=function(){""!==a.user&&""!==a.pass?b.login(a.user,a.pass).success(function(a){b.setUser(a.User.Username),b.setToken(a.Token),b.setRole(a.User.Role),toastr.success(a.User.Username+" logged in!"),console.log(a.User.Role),"student"===a.User.Role?c.path("/student"):"admin"===a.User.Role&&c.path("/admin")}).error(function(){toastr.error("Bad username or password!","Login error")}):toastr.error("Username or password empty!","Login error")}}]),angular.module("EvalApp").factory("LoginResource",["$http","SERVER_URL",function(a,b){var c="",d="",e="";return{login:function(c,d){var e={user:c,pass:d};return a.post(b+"login",e)},isLoggedIn:function(){return""!==c?!0:!1},getUser:function(){return c},getToken:function(){return d},getRole:function(){return e},setUser:function(a){c=a},setToken:function(a){d=a},setRole:function(a){e=a}}}]),angular.module("EvalApp").factory("MyResource",["$http","SERVER_URL",function(a,b){var c="";return{init:function(a){var b="Basic "+a;c={headers:{Authorization:b}}},courses:function(){return a.get(b+"my/courses",c)},evaluations:function(){return a.get(b+"my/evaluations",c)}}}]),angular.module("EvalApp").controller("StudentController",["$scope","LoginResource","MyResource","$location",function(a,b,c){var d=b.getToken();a.currentUser=b.getUser(),a.myCourses=[],a.myEvaluations=[],void 0!==d?(c.init(d),c.courses().success(function(b){a.myCourses=b,toastr.success("Fetched courses")}).error(function(){toastr.error("Something went wrong")}),c.evaluations().success(function(b){a.myEvaluations=b,console.log("Eval: "+a.myEvaluations),toastr.success("Fetched evaluations")}).error(function(){toastr.error("Could not fetch your evaluations")})):toastr.error("Token undefined")}]);